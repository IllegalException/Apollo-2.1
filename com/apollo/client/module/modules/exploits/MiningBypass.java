//Decomped by XeonLyfe

package com.apollo.client.module.modules.exploits;

import com.apollo.client.module.*;
import com.apollo.api.values.*;
import com.apollo.api.event.events.*;
import me.zero.alpine.listener.*;
import java.util.function.*;
import java.util.*;
import net.minecraft.client.*;
import net.minecraft.init.*;
import net.minecraft.potion.*;
import net.minecraft.util.math.*;
import net.minecraft.world.*;
import net.minecraft.block.state.*;
import net.minecraft.block.*;
import com.apollo.client.*;
import com.mojang.realmsclient.gui.*;
import net.minecraft.util.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;

public class MiningBypass extends Module
{
    Value.Mode mode;
    Value.Boolean haste;
    @EventHandler
    private final Listener<DamageBlockEvent> listener;
    
    public MiningBypass() {
        super("Mining Bypass", Module.Category.Exploits);
        this.listener = (Listener<DamageBlockEvent>)new Listener(event -> {
            if (MiningBypass.mc.world == null || MiningBypass.mc.player == null) {
                return;
            }
            if (this.canBreak(event.getPos())) {
                if (this.mode.getValue().equalsIgnoreCase("Packet")) {
                    MiningBypass.mc.player.swingArm(EnumHand.MAIN_HAND);
                    MiningBypass.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, event.getPos(), event.getFace()));
                    MiningBypass.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, event.getPos(), event.getFace()));
                    event.cancel();
                }
                if (this.mode.getValue().equalsIgnoreCase("Damage") && MiningBypass.mc.playerController.curBlockDamageMP >= 0.7f) {
                    MiningBypass.mc.playerController.curBlockDamageMP = 1.0f;
                }
                if (this.mode.getValue().equalsIgnoreCase("Instant")) {
                    MiningBypass.mc.player.swingArm(EnumHand.MAIN_HAND);
                    MiningBypass.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, event.getPos(), event.getFace()));
                    MiningBypass.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, event.getPos(), event.getFace()));
                    MiningBypass.mc.playerController.onPlayerDestroyBlock(event.getPos());
                    MiningBypass.mc.world.setBlockToAir(event.getPos());
                }
            }
        }, new Predicate[0]);
    }
    
    public void setup() {
        final ArrayList<String> Modes = new ArrayList<String>();
        Modes.add("Packet");
        Modes.add("Damage");
        Modes.add("Instant");
        this.mode = this.registerMode("Mode", "Mode", (List)Modes, "Packet");
        this.haste = this.registerBoolean("Haste", "Haste", false);
    }
    
    public void onUpdate() {
        Minecraft.getMinecraft().playerController.blockHitDelay = 0;
        if (this.haste.getValue()) {
            final PotionEffect effect = new PotionEffect(MobEffects.HASTE, 80950, 1, false, false);
            MiningBypass.mc.player.addPotionEffect(new PotionEffect(effect));
        }
        if (!this.haste.getValue() && MiningBypass.mc.player.isPotionActive(MobEffects.HASTE)) {
            MiningBypass.mc.player.removePotionEffect(MobEffects.HASTE);
        }
    }
    
    private boolean canBreak(final BlockPos pos) {
        final IBlockState blockState = MiningBypass.mc.world.getBlockState(pos);
        final Block block = blockState.getBlock();
        return block.getBlockHardness(blockState, (World)MiningBypass.mc.world, pos) != -1.0f;
    }
    
    public void onEnable() {
        Main.EVENT_BUS.subscribe((Object)this);
    }
    
    public String getHudInfo() {
        String t = "";
        if (this.mode.getValue().equalsIgnoreCase("Packet")) {
            t = "[" + ChatFormatting.WHITE + "Packet" + ChatFormatting.GRAY + "]";
        }
        if (this.mode.getValue().equalsIgnoreCase("Damage")) {
            t = "[" + ChatFormatting.WHITE + "Damage" + ChatFormatting.GRAY + "]";
        }
        if (this.mode.getValue().equalsIgnoreCase("Instant")) {
            t = "[" + ChatFormatting.WHITE + "Instant" + ChatFormatting.GRAY + "]";
        }
        return t;
    }
    
    public void onDisable() {
        Main.EVENT_BUS.unsubscribe((Object)this);
        MiningBypass.mc.player.removePotionEffect(MobEffects.HASTE);
    }
}
